Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2014-03-26T14:38:35+08:00

====== 18206 ======
Created Wednesday 26 March 2014

=== Draft Design Proposal: ===
Email and Exchange plan to follow the feature of kk-shinano, and EnterpriseService.apk reuse kk-shinano
__SemcEmail__.apk, __Exchange__2.apk
__EnterpriseService__.apk
patch: PID__005172__, affect gits
git list:
   platform/frameworks/base
   platform/packages/apps/Settings
   platform/vendor/semc/packages/apps/email
   platform/vendor/semc/frameworks/base/enterprise
Simple test method:
Pls refer to TestEnterpriseClient.apk which is belong to kk-shinano. this apk is a MDM application, it can add and remove applications to black/white list. It's path is vendor/semc/frameworks/base/enterprise/TestEnterpriseClient, and it shoul be manual compiled, and for seagull it may change some codes to avoid some crashes.


Description: The purpose of this feature is to implement an API that allows 3rd party MDMs (Mobile Device Management) to add and remove applications to black/white list. Any application that is considered blocked will be prevented from being launched and the user will get a notification that says that the application is blocked due to policies. Preventing installation of black listed applications might be added in future version.Petter Wallin: Changed, blocked applications will be disabled

It is also required to implement the capability in platform for deploying the blacklist through EAS policy of UnapprovedInROMApplicationList.

This feature will extend the Sony Enterpise API by extending the FP14068 (EAS 2 IT policies for enterprise proposition).

If a white list exists, all system applications will be automatically white-listed.

If an application exists on both black and white list, it will be blocked.

Enterprise API
This feature will extend the existing Enterprise API.

Exchange
The EAS policy of UnapprovedInROMApplicationList is used to deliver the blacklist, Exchange receives configuration file which includes all the EAS policies from EAS server, parses the policy and writes all policies into Policy table in EmailProvider. UnapprovedInROMApplicationList has to be added into parser so that it could be recognized.

Android Email
EmailProvider, a content provider for email/exchange, has to be changed to add ability to store the policy data.

SEMC Email
Email needs to read these policy flags, and then set them to framework through API in Governance API which in turn writes to DevicePolicyManager using hidden API

Device Policy Manager
Device Policy Manager executes disabling/enabling a specific app. 
The black list will be located in the Device Policy Manager. 
The implementation of the white-list will be located in the Enterprise service. : Petter Wallin: Changed, whitelist is in DPM

design: http://metadoc.sonyericsson.net/login_link.asp?doc=6/10262-LXE1101576&rev=latest&type=PdfFile
